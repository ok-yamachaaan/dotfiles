# deoplete------------------

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup   = 1
let g:deoplete#auto_complete_delay = 0
inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1



# neosnippet and depends----------------
[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1
hook_source = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
"imap <C-k>     <Plug>(neosnippet_expand_or_jump)
"smap <C-k>     <Plug>(neosnippet_expand_or_jump)
"xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <expr><TAB>
 \ pumvisible() ? "\<C-n>" :
 \ neosnippet#expandable_or_jumpable() ?
 \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

imap <expr><CR>
\ (pumvisible() && neosnippet#expandable()) ? "\<Plug>(neosnippet_expand_or_jump)" : "\<CR>"


smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
"if has('conceal'
"  set conceallevel=2 concealcursor=niv
"endif
'''


#[[plugins]]
#repo = 'sudar/vim-arduino-syntax'
#on_ft = ['arduino']

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'shougo/unite.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'

[[plugins]]
repo = 'wesleyche/SrcExpl'

[[plugins]]
repo = 'wesleyche/Trinity'

[[plugins]]
repo = 'altercation/vim-colors-solarized'


[[plugins]]
repo = 'vim-scripts/open-browser.vim'

[[plugins]]
repo = 'vim-scripts/renamer.vim'

[[plugins]]
repo = 'kana/vim-submode'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'scrooloose/nerdcommenter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'Lokaltog/vim-easymotion'

[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'szw/vim-tags'

[[plugins]]
repo = '2072/PHP-Indenting-for-VIm'

[[plugins]]
repo = 'marijnh/tern_for_vim'

[[plugins]]
repo = 'osyo-manga/vim-over'

[[plugins]]
repo = 'mhinz/vim-startify'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'joonty/vdebug'

[[plugins]]
repo = 'yuroyoro/smooth_scroll.vim'

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'kien/ctrlp.vim'

[[plugins]]
repo = 'tacahiroy/ctrlp-funky'

[[plugins]]
repo = 'davidhalter/jedi-vim'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'godlygeek/tabular'

[[plugins]]
repo = 'plasticboy/vim-markdown'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo  = 'cespare/vim-toml'

